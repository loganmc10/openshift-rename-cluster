- name: Check for existing secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: ingress-secret
    namespace: openshift-config
  register: current_secret
  until: current_secret is not failed

- name: Update Ingress
  when: current_secret.resources | length | int == 0
  block:
    - name: Create certificate
      ansible.builtin.include_tasks: certs.yaml
      vars:
        prefix: "*.apps"
        type: "ingress"
        secret_namespace:
          - "openshift-config"
          - "openshift-ingress"

    # this updates the default certificate for Routes created in the future
    - name: Patch Ingress Controller
      kubernetes.core.k8s:
        definition:
          apiVersion: operator.openshift.io/v1
          kind: IngressController
          metadata:
            name: default
            namespace: openshift-ingress-operator
          spec:
            defaultCertificate:
              name: ingress-secret
        state: present
      register: k8s_result
      until: k8s_result is not failed

    # this updates the default apps domain, as well as configures the Console and OAuth endpoints
    - name: Patch Ingress
      kubernetes.core.k8s:
        definition:
          apiVersion: config.openshift.io/v1
          kind: Ingress
          metadata:
            name: cluster
          spec:
            appsDomain: "{{ 'apps.' + domain }}"
            componentRoutes:
              - hostname: "{{ 'downloads-openshift-console.apps.' + domain }}"
                name: downloads
                namespace: openshift-console
                servingCertKeyPairSecret:
                  name: ingress-secret
              - hostname: "{{ 'console-openshift-console.apps.' + domain }}"
                name: console
                namespace: openshift-console
                servingCertKeyPairSecret:
                  name: ingress-secret
              - hostname: "{{ 'oauth-openshift.apps.' + domain }}"
                name: oauth-openshift
                namespace: openshift-authentication
                servingCertKeyPairSecret:
                  name: ingress-secret
        state: present
      register: k8s_result
      until: k8s_result is not failed

    - name: Create Custom CA ConfigMap
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: custom-ca
            namespace: openshift-config
          data:
            ca-bundle.crt: "{{ certificate.certificate }}"
        apply: true
        state: present
      register: k8s_result
      until: k8s_result is not failed

    - name: Update proxy config
      kubernetes.core.k8s:
        definition:
          apiVersion: config.openshift.io/v1
          kind: Proxy
          metadata:
            name: cluster
          spec:
            trustedCA:
              name: custom-ca
        state: present
      register: k8s_result
      until: k8s_result is not failed

    - name: Pause for 5 minutes to let cluster progress
      ansible.builtin.pause:
        minutes: 5

    - name: Get list of routes
      kubernetes.core.k8s_info:
        api_version: route.openshift.io/v1
        kind: Route
      register: routes
      until: (routes is not failed) and (routes.resources | length | int > 0)
      retries: 60
      delay: 20

    # this deletes other Routes (openshift-monitoring for instance) so that they can be re-created with the new domain
    - name: Delete routes
      loop: "{{ routes.resources }}"
      loop_control:
        label: "{{ item.metadata.name }}"
      when: item['metadata']['namespace'].startswith("openshift-")
      kubernetes.core.k8s:
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: "{{ item.metadata.name }}"
            namespace: "{{ item.metadata.namespace }}"
        state: absent
        wait: true
        wait_timeout: 1200
      register: k8s_result
      until: k8s_result is not failed
